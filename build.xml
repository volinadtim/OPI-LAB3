<?xml version="1.0" encoding="UTF-8"?>

<project name="lab3" default="build">

    <property file="build.properties"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="*.jar"/>
        <fileset dir="${main.dir}" includes="*.java"/>
    </path>

    <path id="classpath.test">
        <pathelement location="${junit}"/>
        <pathelement location="${hamcrest}"/>
        <pathelement location="${build.classes.dir}"/>
    </path>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${contrib}"/>
        </classpath>
    </taskdef>

    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${contrib}"/>
        </classpath>
    </taskdef>

    <target name="compile" depends="clean">
        <echo message="***** COMPILE STARTED *****"/>
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${test.classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" classpathref="classpath" includeantruntime="false"/>
        <echo message="***** COMPILE COMPLETED *****"/>
    </target>

    <target name="build" depends="compile">
        <echo message="***** BUILD STARTED *****"/>
        <copy todir="${build.dir}">
            <fileset dir="${web.dir}"/>
        </copy>
        <copy todir="${build.dir.lib}">
            <fileset dir="${lib.dir}"/>
        </copy>
        <copy todir="${build.classes.dir}">
            <fileset dir="${resources.dir}"/>
        </copy>
        <jar destfile="${build.dir}/${build.jar}">
            <fileset dir="${build.classes.dir}"/>
            <manifest>
                <attribute name="Created-By" value="volin"/>
                <attribute name="Manifest-Version" value="1.0"/>
                <attribute name="Main-Class" value="${main_class}"/>
            </manifest>
        </jar>
        <war destfile="${build.dir}/${ant.project.name}.war" webxml="${build.web.xml}">
            <fileset dir="${build.dir}"/>
            <manifest>
                <attribute name="Created-By" value="volin"/>
                <attribute name="Manifest-Version" value="1.0"/>
                <attribute name="Main-Class" value="${main_class}"/>
            </manifest>
        </war>
        <echo message="***** BUILD COMPLETED *****"/>
    </target>

    <target name="clean">
        <echo message="***** CLEAN STARTED *****"/>
        <delete dir="${build.dir}"/>
        <delete dir="${junit.report.dir}"/>
        <echo message="***** CLEAN COMPLETED *****"/>
    </target>

    <target name="test" depends="build">
        <echo message="***** TEST STARTED *****"/>
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${junit.report.dir}"/>
        <javac destdir="${test.classes.dir}" srcdir="${test.dir}" includeantruntime="false" encoding="utf-8">
            <classpath refid="classpath.test"/>
        </javac>
        <junit printsummary="on" haltonfailure="true" haltonerror="true">
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${test.classes.dir}"/>
            </classpath>
            <batchtest fork="yes" todir="${junit.report.dir}">
                <formatter type="plain"/>
                <fileset dir="${test.dir}" includes="*Test.java"/>
            </batchtest>
        </junit>
        <echo message="***** TEST COMPLETED *****"/>
    </target>

    <!-- SCP target -->
    <target name="scp" depends="build">
        <scp file="${build.dir}/${build.jar}" todir="${remote.server.dir}"
             port="${remote.server.port}" />
    </target>

    <target name="native2ascii">
        <echo message="***** NATIVE2ASCII STARTED *****"/>
        <delete dir="${native2ascii.resources}"/>
        <native2ascii src="${resources.dir}"
                      dest="${native2ascii.resources}"
                      includes="**/*.properties"/>
        <echo message="***** NATIVE2ASCII COMPLETED *****"/>
    </target>

    <!-- Music target -->
    <target name="music" depends="build">
        <sound>
            <success source="${music.success.file}"/>
            <fail source="${music.fail.file}"/>
        </sound>
        <property name="build" value="true"/>
<!--        <exec executable="play" dir="${music.dir}">-->
<!--            <arg value="${music.file}"/>-->
<!--        </exec>-->
    </target>

    <!-- XML validation target -->
    <target name="xml">
        <xmlvalidate failonerror="no" lenient="yes" warn="yes"
                     classname="org.apache.xerces.parsers.SAXParser"
                     classpath="lib/xercesImpl.jar">
            <fileset dir="${src.dir}">
                <include name="**/*.xml"/>
            </fileset>
        </xmlvalidate>
    </target>

    <!-- Documentation target -->
    <target name="doc" depends="build">
        <mkdir dir="${build.javadoc.dir}"/>
        <javadoc sourcepath="${src.dir}" destdir="${build.javadoc.dir}" classpathref="classpath">
            <fileset dir="${src.dir}" defaultexcludes="yes">
                <include name="**/*.java" />
            </fileset>
        </javadoc>
        <zip destfile="${build.dir}/javadoc.zip">
            <fileset dir="${build.javadoc.dir}"/>
        </zip>


        <!-- Generate MD5 and SHA-1 checksums -->
        <checksum algorithm="MD5" file="${build.dir}/${build.jar}" todir="${build.dir}" />
        <checksum algorithm="SHA-1" file="${build.dir}/${build.jar}" todir="${build.dir}" />


        <!-- Read MD5 checksum value from the generated .md5 file -->
        <loadfile property="checksum.md5"
                  srcFile="${build.dir}/${build.jar}.MD5">
            <filterchain>
                <striplinebreaks/>
            </filterchain>
        </loadfile>
        <loadfile property="checksum.sha1"
                  srcFile="${build.dir}/${build.jar}.SHA-1">
            <filterchain>
                <striplinebreaks/>
            </filterchain>
        </loadfile>

        <manifest file="${build.dir}/MANIFEST.MF" mode="update">
            <section name="hash">
                <attribute name="MD5" value="${checksum.md5}"></attribute>
                <attribute name="SHA-1" value="${checksum.sha1}"></attribute>
            </section>
        </manifest>

        
        <!-- Checksums for all files instead of jars -->
        <checksum algorithm="SHA-1" fileext=".sha1" format="MD5SUM" todir="${build.cache}/sha">
            <fileset dir="${build.dir}" />
        </checksum>
        <concat destfile="${build.dir}/DIGEST.sha1sum">
            <fileset dir="${build.cache}/sha" />
        </concat>
        <checksum algorithm="MD5" fileext=".md5" format="MD5SUM" todir="${build.cache}/md5">
            <fileset dir="${build.dir}" />
        </checksum>
        <concat destfile="${build.dir}/DIGEST.md5sum">
            <fileset dir="${build.cache}/md5" />
        </concat>
    </target>

</project>